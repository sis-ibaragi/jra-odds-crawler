create table if not exists KAISAI (
	KAISAI_CD		CHAR(10)		NOT NULL,
	KAISAI_NM		VARCHAR(32)		NOT NULL,
	KAISAI_DT		DATE			NOT NULL,
	INSERT_DTTM		TIMESTAMP		NOT NULL DEFAULT CURRENT_TIMESTAMP,
	UPDATE_DTTM		TIMESTAMP		NOT NULL DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY (KAISAI_CD)
);


create table if not exists RACE (
	KAISAI_CD		CHAR(10)			NOT NULL,
	RACE_NO			SMALLINT	NOT NULL,
	INSERT_DTTM		TIMESTAMP			NOT NULL DEFAULT CURRENT_TIMESTAMP,
	UPDATE_DTTM		TIMESTAMP			NOT NULL DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY (KAISAI_CD, RACE_NO),
	FOREIGN KEY (KAISAI_CD) REFERENCES KAISAI(KAISAI_CD)
);


create table if not exists RACE_UMA_LIST (
	KAISAI_CD		CHAR(10)			NOT NULL,
	RACE_NO			SMALLINT	NOT NULL,
	UMA_NO			SMALLINT	NOT NULL,
	WAKU_NO			SMALLINT	NOT NULL,
	UMA_NM			VARCHAR(64)			NOT NULL,
	JOCKEY_NM		VARCHAR(64)			NOT NULL,
	INSERT_DTTM		TIMESTAMP			NOT NULL DEFAULT CURRENT_TIMESTAMP,
	UPDATE_DTTM		TIMESTAMP			NOT NULL DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY (KAISAI_CD, RACE_NO, UMA_NO),
	FOREIGN KEY (KAISAI_CD, RACE_NO) REFERENCES RACE(KAISAI_CD, RACE_NO)
);


create table if not exists RACE_ODDS (
	KAISAI_CD		CHAR(10)			NOT NULL,
	RACE_NO			SMALLINT	NOT NULL,
	ODDS_TIME_NO	SMALLINT	NOT NULL,
	TNPK_ODDS_TIME	TIME,
	UMRN_ODDS_TIME	TIME,
	INSERT_DTTM		TIMESTAMP			NOT NULL DEFAULT CURRENT_TIMESTAMP,
	UPDATE_DTTM		TIMESTAMP			NOT NULL DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY (KAISAI_CD, RACE_NO, ODDS_TIME_NO),
	FOREIGN KEY (KAISAI_CD, RACE_NO) REFERENCES RACE(KAISAI_CD, RACE_NO)
);


create table if not exists RACE_ODDS_TAN (
	KAISAI_CD		CHAR(10)			NOT NULL,
	RACE_NO			SMALLINT	NOT NULL,
	ODDS_TIME_NO	SMALLINT	NOT NULL,
	UMA_NO			SMALLINT	NOT NULL,
	NINKI_NO		SMALLINT,
	SORT_NO			SMALLINT,
	TAN_ODDS		DECIMAL(6, 1),
	INSERT_DTTM		TIMESTAMP			NOT NULL DEFAULT CURRENT_TIMESTAMP,
	UPDATE_DTTM		TIMESTAMP			NOT NULL DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY (KAISAI_CD, RACE_NO, ODDS_TIME_NO, UMA_NO),
	FOREIGN KEY (KAISAI_CD, RACE_NO, ODDS_TIME_NO) REFERENCES RACE_ODDS(KAISAI_CD, RACE_NO, ODDS_TIME_NO)
);

create table if not exists RACE_ODDS_FUKU (
	KAISAI_CD		CHAR(10)			NOT NULL,
	RACE_NO			SMALLINT			NOT NULL,
	ODDS_TIME_NO	SMALLINT			NOT NULL,
	UMA_NO			SMALLINT			NOT NULL,
	NINKI_NO		SMALLINT,
	SORT_NO			SMALLINT,
	FUKU_ODDS_MIN	DECIMAL(6, 1),
	FUKU_ODDS_MAX	DECIMAL(6, 1),
	INSERT_DTTM		TIMESTAMP			NOT NULL DEFAULT CURRENT_TIMESTAMP,
	UPDATE_DTTM		TIMESTAMP			NOT NULL DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY (KAISAI_CD, RACE_NO, ODDS_TIME_NO, UMA_NO),
	FOREIGN KEY (KAISAI_CD, RACE_NO, ODDS_TIME_NO) REFERENCES RACE_ODDS(KAISAI_CD, RACE_NO, ODDS_TIME_NO)
);

create table if not exists RACE_ODDS_UMRN (
	KAISAI_CD		CHAR(10)			NOT NULL,
	RACE_NO			SMALLINT	NOT NULL,
	ODDS_TIME_NO	SMALLINT	NOT NULL,
	UMA_NO_1		SMALLINT	NOT NULL,
	UMA_NO_2		SMALLINT	NOT NULL,
	NINKI_NO		SMALLINT,
	SORT_NO			SMALLINT,
	UMRN_ODDS		DECIMAL(6, 1),
	DIFF_RT			DECIMAL(4,2),
	INSERT_DTTM		TIMESTAMP		NOT NULL DEFAULT CURRENT_TIMESTAMP,
	UPDATE_DTTM		TIMESTAMP		NOT NULL DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY (KAISAI_CD, RACE_NO, ODDS_TIME_NO, UMA_NO_1, UMA_NO_2),
	FOREIGN KEY (KAISAI_CD, RACE_NO, ODDS_TIME_NO) REFERENCES RACE_ODDS(KAISAI_CD, RACE_NO, ODDS_TIME_NO)
);

create table if not exists RACE_UMA_MARK (
	KAISAI_CD		CHAR(10)			NOT NULL,
	RACE_NO			SMALLINT	NOT NULL,
	UMA_NO			SMALLINT	NOT NULL,
	MARK_CD			CHAR(2),
	INSERT_DTTM		TIMESTAMP			NOT NULL DEFAULT CURRENT_TIMESTAMP,
	UPDATE_DTTM		TIMESTAMP			NOT NULL DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY (KAISAI_CD, RACE_NO, UMA_NO),
	FOREIGN KEY (KAISAI_CD, RACE_NO, UMA_NO) REFERENCES RACE_UMA_LIST(KAISAI_CD, RACE_NO, UMA_NO)
);

create or replace function UPDATE_TIMESTAMP()
returns opaque as '
begin
      NEW.UPDATE_DTTM := CURRENT_TIMESTAMP; 
      return NEW;
end;
' language 'plpgsql';

create trigger TRG_KAISAI_01 before update on KAISAI
for each row execute procedure UPDATE_TIMESTAMP();

create trigger TRG_RACE_01 before update on RACE
for each row execute procedure UPDATE_TIMESTAMP();

create trigger TRG_RACE_UMA_LIST_01 before update on RACE_UMA_LIST
for each row execute procedure UPDATE_TIMESTAMP();

create trigger TRG_RACE_ODDS_01 before update on RACE_ODDS
for each row execute procedure UPDATE_TIMESTAMP();

create trigger TRG_RACE_ODDS_TAN_01 before update on RACE_ODDS_TAN
for each row execute procedure UPDATE_TIMESTAMP();

create trigger TRG_RACE_ODDS_FUKU_01 before update on RACE_ODDS_FUKU
for each row execute procedure UPDATE_TIMESTAMP();

create trigger TRG_RACE_ODDS_UMRN_01 before update on RACE_ODDS_UMRN
for each row execute procedure UPDATE_TIMESTAMP();

create trigger TRG_RACE_UMA_MARK_01 before update on RACE_UMA_MARK
for each row execute procedure UPDATE_TIMESTAMP();
