/*
 * This file is generated by jOOQ.
 */
package crawler.jra.dao.tables;


import crawler.jra.dao.Ihq2xbiptmm0mjtp;
import crawler.jra.dao.Indexes;
import crawler.jra.dao.Keys;
import crawler.jra.dao.tables.records.RaceOddsRecord;

import java.sql.Time;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RaceOdds extends TableImpl<RaceOddsRecord> {

    private static final long serialVersionUID = -181249697;

    /**
     * The reference instance of <code>ihq2xbiptmm0mjtp.RACE_ODDS</code>
     */
    public static final RaceOdds RACE_ODDS = new RaceOdds();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RaceOddsRecord> getRecordType() {
        return RaceOddsRecord.class;
    }

    /**
     * The column <code>ihq2xbiptmm0mjtp.RACE_ODDS.KAISAI_CD</code>.
     */
    public final TableField<RaceOddsRecord, String> KAISAI_CD = createField("KAISAI_CD", org.jooq.impl.SQLDataType.CHAR(10).nullable(false), this, "");

    /**
     * The column <code>ihq2xbiptmm0mjtp.RACE_ODDS.RACE_NO</code>.
     */
    public final TableField<RaceOddsRecord, UByte> RACE_NO = createField("RACE_NO", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>ihq2xbiptmm0mjtp.RACE_ODDS.ODDS_TIME_NO</code>.
     */
    public final TableField<RaceOddsRecord, UByte> ODDS_TIME_NO = createField("ODDS_TIME_NO", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>ihq2xbiptmm0mjtp.RACE_ODDS.TNPK_ODDS_TIME</code>.
     */
    public final TableField<RaceOddsRecord, Time> TNPK_ODDS_TIME = createField("TNPK_ODDS_TIME", org.jooq.impl.SQLDataType.TIME, this, "");

    /**
     * The column <code>ihq2xbiptmm0mjtp.RACE_ODDS.UMRN_ODDS_TIME</code>.
     */
    public final TableField<RaceOddsRecord, Time> UMRN_ODDS_TIME = createField("UMRN_ODDS_TIME", org.jooq.impl.SQLDataType.TIME, this, "");

    /**
     * The column <code>ihq2xbiptmm0mjtp.RACE_ODDS.INSERT_DTTM</code>.
     */
    public final TableField<RaceOddsRecord, Timestamp> INSERT_DTTM = createField("INSERT_DTTM", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>ihq2xbiptmm0mjtp.RACE_ODDS.UPDATE_DTTM</code>.
     */
    public final TableField<RaceOddsRecord, Timestamp> UPDATE_DTTM = createField("UPDATE_DTTM", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>ihq2xbiptmm0mjtp.RACE_ODDS</code> table reference
     */
    public RaceOdds() {
        this(DSL.name("RACE_ODDS"), null);
    }

    /**
     * Create an aliased <code>ihq2xbiptmm0mjtp.RACE_ODDS</code> table reference
     */
    public RaceOdds(String alias) {
        this(DSL.name(alias), RACE_ODDS);
    }

    /**
     * Create an aliased <code>ihq2xbiptmm0mjtp.RACE_ODDS</code> table reference
     */
    public RaceOdds(Name alias) {
        this(alias, RACE_ODDS);
    }

    private RaceOdds(Name alias, Table<RaceOddsRecord> aliased) {
        this(alias, aliased, null);
    }

    private RaceOdds(Name alias, Table<RaceOddsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> RaceOdds(Table<O> child, ForeignKey<O, RaceOddsRecord> key) {
        super(child, key, RACE_ODDS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ihq2xbiptmm0mjtp.IHQ2XBIPTMM0MJTP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.RACE_ODDS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RaceOddsRecord> getPrimaryKey() {
        return Keys.KEY_RACE_ODDS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RaceOddsRecord>> getKeys() {
        return Arrays.<UniqueKey<RaceOddsRecord>>asList(Keys.KEY_RACE_ODDS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<RaceOddsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<RaceOddsRecord, ?>>asList(Keys.RACE_ODDS_IBFK_1);
    }

    public Race race() {
        return new Race(this, Keys.RACE_ODDS_IBFK_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RaceOdds as(String alias) {
        return new RaceOdds(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RaceOdds as(Name alias) {
        return new RaceOdds(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RaceOdds rename(String name) {
        return new RaceOdds(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RaceOdds rename(Name name) {
        return new RaceOdds(name, null);
    }
}
