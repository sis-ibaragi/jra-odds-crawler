/*
 * This file is generated by jOOQ.
 */
package crawler.jra.dao.tables;


import crawler.jra.dao.Appdb01;
import crawler.jra.dao.Indexes;
import crawler.jra.dao.Keys;
import crawler.jra.dao.tables.records.KaisaiRecord;

import java.sql.Date;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Kaisai extends TableImpl<KaisaiRecord> {

    private static final long serialVersionUID = -2137023610;

    /**
     * The reference instance of <code>appdb01.kaisai</code>
     */
    public static final Kaisai KAISAI = new Kaisai();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<KaisaiRecord> getRecordType() {
        return KaisaiRecord.class;
    }

    /**
     * The column <code>appdb01.kaisai.KAISAI_CD</code>.
     */
    public final TableField<KaisaiRecord, String> KAISAI_CD = createField("KAISAI_CD", org.jooq.impl.SQLDataType.CHAR(10).nullable(false), this, "");

    /**
     * The column <code>appdb01.kaisai.KAISAI_NM</code>.
     */
    public final TableField<KaisaiRecord, String> KAISAI_NM = createField("KAISAI_NM", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>appdb01.kaisai.KAISAI_DT</code>.
     */
    public final TableField<KaisaiRecord, Date> KAISAI_DT = createField("KAISAI_DT", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>appdb01.kaisai.INSERT_DTTM</code>.
     */
    public final TableField<KaisaiRecord, Timestamp> INSERT_DTTM = createField("INSERT_DTTM", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("current_timestamp()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>appdb01.kaisai.UPDATE_DTTM</code>.
     */
    public final TableField<KaisaiRecord, Timestamp> UPDATE_DTTM = createField("UPDATE_DTTM", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("current_timestamp()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>appdb01.kaisai</code> table reference
     */
    public Kaisai() {
        this(DSL.name("kaisai"), null);
    }

    /**
     * Create an aliased <code>appdb01.kaisai</code> table reference
     */
    public Kaisai(String alias) {
        this(DSL.name(alias), KAISAI);
    }

    /**
     * Create an aliased <code>appdb01.kaisai</code> table reference
     */
    public Kaisai(Name alias) {
        this(alias, KAISAI);
    }

    private Kaisai(Name alias, Table<KaisaiRecord> aliased) {
        this(alias, aliased, null);
    }

    private Kaisai(Name alias, Table<KaisaiRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Kaisai(Table<O> child, ForeignKey<O, KaisaiRecord> key) {
        super(child, key, KAISAI);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Appdb01.APPDB01;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.KAISAI_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<KaisaiRecord> getPrimaryKey() {
        return Keys.KEY_KAISAI_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<KaisaiRecord>> getKeys() {
        return Arrays.<UniqueKey<KaisaiRecord>>asList(Keys.KEY_KAISAI_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Kaisai as(String alias) {
        return new Kaisai(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Kaisai as(Name alias) {
        return new Kaisai(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Kaisai rename(String name) {
        return new Kaisai(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Kaisai rename(Name name) {
        return new Kaisai(name, null);
    }
}
