/*
 * This file is generated by jOOQ.
 */
package crawler.jra.dao.tables;


import crawler.jra.dao.Ihq2xbiptmm0mjtp;
import crawler.jra.dao.Indexes;
import crawler.jra.dao.Keys;
import crawler.jra.dao.tables.records.RaceRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Race extends TableImpl<RaceRecord> {

    private static final long serialVersionUID = -1724369067;

    /**
     * The reference instance of <code>ihq2xbiptmm0mjtp.RACE</code>
     */
    public static final Race RACE = new Race();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RaceRecord> getRecordType() {
        return RaceRecord.class;
    }

    /**
     * The column <code>ihq2xbiptmm0mjtp.RACE.KAISAI_CD</code>.
     */
    public final TableField<RaceRecord, String> KAISAI_CD = createField("KAISAI_CD", org.jooq.impl.SQLDataType.CHAR(10).nullable(false), this, "");

    /**
     * The column <code>ihq2xbiptmm0mjtp.RACE.RACE_NO</code>.
     */
    public final TableField<RaceRecord, UByte> RACE_NO = createField("RACE_NO", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>ihq2xbiptmm0mjtp.RACE.INSERT_DTTM</code>.
     */
    public final TableField<RaceRecord, Timestamp> INSERT_DTTM = createField("INSERT_DTTM", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>ihq2xbiptmm0mjtp.RACE.UPDATE_DTTM</code>.
     */
    public final TableField<RaceRecord, Timestamp> UPDATE_DTTM = createField("UPDATE_DTTM", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>ihq2xbiptmm0mjtp.RACE</code> table reference
     */
    public Race() {
        this(DSL.name("RACE"), null);
    }

    /**
     * Create an aliased <code>ihq2xbiptmm0mjtp.RACE</code> table reference
     */
    public Race(String alias) {
        this(DSL.name(alias), RACE);
    }

    /**
     * Create an aliased <code>ihq2xbiptmm0mjtp.RACE</code> table reference
     */
    public Race(Name alias) {
        this(alias, RACE);
    }

    private Race(Name alias, Table<RaceRecord> aliased) {
        this(alias, aliased, null);
    }

    private Race(Name alias, Table<RaceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Race(Table<O> child, ForeignKey<O, RaceRecord> key) {
        super(child, key, RACE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ihq2xbiptmm0mjtp.IHQ2XBIPTMM0MJTP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.RACE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RaceRecord> getPrimaryKey() {
        return Keys.KEY_RACE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RaceRecord>> getKeys() {
        return Arrays.<UniqueKey<RaceRecord>>asList(Keys.KEY_RACE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<RaceRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<RaceRecord, ?>>asList(Keys.RACE_IBFK_1);
    }

    public Kaisai kaisai() {
        return new Kaisai(this, Keys.RACE_IBFK_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Race as(String alias) {
        return new Race(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Race as(Name alias) {
        return new Race(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Race rename(String name) {
        return new Race(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Race rename(Name name) {
        return new Race(name, null);
    }
}
